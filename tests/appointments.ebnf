#
# TODO: Make test with this class
#       The only significant part is the package definition in the
#       language name.
#
language com.angelspeech.SAGE_INTERGY_EHR_TXT.Appointments {
	# Global definitions
	noWS
	decs = [0-9]+.
	spaced_field  = [a-zA-Z.]+ ( [ ] [a-zA-Z.]+ )*.
	skipWS

	# Junk - stuff to be filtered out
	ignore top = { [\all~P] } 'Provider' 'Page' decs.
	ignore day = noWS [a-zA-Z]+.
	line = noWS [\all~\r\n]+ [\r\n]+.
	ignore headers = noWS line line line line. 
	ignore headers2 = noWS line line. 
   	ignore not_reg = '** Patient not fully registered.'.	

	# Useful stuff
	noWS
	token date = [0-9][0-9] "/" [0-9][0-9] "/" [0-9][0-9][0-9][0-9].
	token name = spaced_field.
	token lastname = spaced_field.
	token firstname = spaced_field.
	skip patient = lastname ', ' firstname. 
	doctor = lastname ', ' firstname. 
	token time = [0-9]+ ":" [0-9][0-9] " " ("AM" | "PM" ). 

	token age = [0-9]+ 'yo'.
	token gender = [FM].

	token phone = '(' decs ')' " " decs '-' decs.

	# Generic fields
	token floating = "-"? [0-9]+ "." [0-9]+.
	token num = [0-9]+.
	token field = [A-Z0-9]+.
	skipWS

	#headers
	dateline = date day doctor.
	top_header = top name headers.
	ignore page_header = not_reg top name headers2 dateline.

	# Records
	token type = field.
	token thrpy_1 = "THRPY1".

	token action = noWS [0-9a-zA-Z]+ ( [ ] [a-zA-Z]+ )*.
	act = action name date phone?.

	note_chars = noWS [\all~ \t\r\n]+.
	token note_text = noWS note_chars ( [ ]+ note_chars )*.
	token reason = note_text.
	appt_note = 'Appt. Note:' note_text. 
	canceled = 'CANCELED' 'By:' name 'Reason:' reason.
	rescheduled = 'RESCHEDULED' 'By:' name 'Reason:' reason.

	record = time num type field thrpy_1? patient 
		( '(' ( (age gender ) | age | gender ) ')' )? ("**")?
		floating date? phone? 
		act
		appt_note?
		(canceled | rescheduled)? .


	token total_num = decs.	
	total = 'Total Appointments For' doctor 'on' date  ':' total_num.

	# DEBUG: 
	token next = noWS [\all~\r\n]*.			# Show next unparseable line
	ignore rest = [\all]*.					# accept rest of file so that parsing doesn't fail.

	day_list  = dateline ( record | page_header )* total. 
	entry file = top_header
				day_list* 
				not_reg
				(next rest)?. 	# This line needed for eating up final whitespace
}
