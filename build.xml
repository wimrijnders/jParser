<!--
	$Id: build.xml 57 2009-09-20 21:15:18Z wri $
  -->
<project name="parser" default="build" basedir=".">
	<!-- Following is the timer task
		 source: http://www.jeckle.de/freeStuff/AntTimerTask/index.html
	  -->
	<taskdef name="timer"
		classname="de.jeckle.AntExtension.Timer"
		classpath="lib/att.jar"
	/>

	<!-- global properties -->
	<property name="src"   location="src"/>
	<property name="grammar" location="grammar"/>
	<property name="build" location="build"/>
	<property name="tests" location="tests"/>
	<property name="lib" location="lib"/>
	<property name="log4j" value="log4j-1.2.16.jar" />

	<property name="testfile" value="${grammar}/ebnf_test.ebnf"/>

	<path id="lib.path">
		<fileset dir="lib">
       		<include name="${log4j}"/>
    	</fileset>
    </path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<mkdir dir="${build}"/>
		<mkdir dir="${build}/gen"/>
		<mkdir dir="${build}/class"/>
		<mkdir dir="${build}/lib"/>
		<mkdir dir="${build}/doc"/>
		<mkdir dir="${build}/test"/>
	</target>

	<target name="compile" depends="init" >
		<javac
			srcdir="${src}"
			destdir="${build}/class"
			includeantruntime="false"
		>
			<classpath refid="lib.path"/>

			<!-- don't compile the main test program at this point -->
			<exclude name="nl/axizo/EBNF/EBNFMain.java" />

			<!-- No Test classes for the regular build -->
			<exclude name="nl/axizo/**/*Test.java" />
		</javac>
	</target>

	<target name="build" depends="compile" >
		<jar jarfile="${build}/lib/parser.jar" basedir="${build}/class"/>
	</target>


	<target name="run" depends="build" >
	  <timer name="run">
		<copy file="${src}/log4j.properties" 
			tofile="${build}/class/log4j.properties" 
		/>

		<java 
				classname="nl.axizo.EBNF.EBNFInitial" 
				dir="${build}/gen"
				fork="true"
				failonerror="true"
		>
			<arg value="${grammar}/ebnf.ebnf"/>
			<classpath>
				<!-- Following for log4j.properties -->
				<pathelement location="${build}/class"/>
				<pathelement location="${build}/lib/parser.jar"/>
				<path refid="lib.path"/>
			</classpath>
		</java>
	  </timer>
	</target>

	<target name="parse" depends="build" >
		<description>
			This task is same as 'run', with the addition
			two parameters
		</description>

	  <timer name="run">
		<copy file="${src}/log4j.properties" 
			tofile="${build}/class/log4j.properties" 
		/>

		<java 
				classname="nl.axizo.EBNF.EBNFInitial" 
				dir="${build}/gen"
				fork="true"
				failonerror="true"
		>
			<arg value="-p"/>
			<arg value="nodes_parseonly.txt"/>
			<arg value="${grammar}/ebnf.ebnf"/>
			<classpath>
				<!-- Following for log4j.properties -->
				<pathelement location="${build}/class"/>
				<pathelement location="${build}/lib/parser.jar"/>
				<path refid="lib.path"/>
			</classpath>
		</java>
	  </timer>
	</target>

	<target name="doc" depends="build">
		<javadoc 
				 destdir="${build}/doc"
				 access="private"
		>
			<doctitle><![CDATA[<h1>Parser Technical Documentation</h1>]]></doctitle>
			<fileset dir="${src}">
				<exclude name="**/*Test*" />
				<exclude name="**/*.properties" />
    		</fileset>
			<fileset dir="${build}/gen" />
			<classpath>
				<path refid="lib.path"/>
			</classpath>
		</javadoc>
	</target>

	<target name="compile_test" depends="run" >
		<echo>Compiling test</echo>
		<!-- Compile the generated parser -->	
		<!-- TODO: Check if copying really necessary -->
		<copy file="${src}/nl/axizo/EBNF/EBNFMain.java" 
			tofile="${build}/gen/nl/axizo/EBNF/EBNFMain.java" 
		/>
		<javac destdir="${build}/class"
			includeantruntime="false"
		>
			<src path="${build}/gen"/>
			<classpath>
				<pathelement location="${dist}/lib/parser.jar"/>
			</classpath>
		</javac>
	</target>

	<target name="test" depends="build, compile_test" >
		<!-- And run the compiled result -->
		<echo>Running test with input ${testfile}</echo>
	  <timer name="test">
		<java 
				classname="nl.axizo.EBNF.EBNFMain" 
				dir="${build}/test"
				fork="true"
				failonerror="true"
		>
			<!-- Enable following for profiling output - this is the jip profiler -->
			<jvmarg value="-javaagent:${lib}/profile.jar" />
			<!-- up-dir needed because we start in a subdir -->
			<!-- arg value="-p"/>
			<arg value="nodes_test.txt"/ -->
			<arg value="${testfile}"/>
			<classpath>
				<path refid="lib.path"/>
				<pathelement location="${build}/lib/parser.jar"/>
				<pathelement location="${build}/class"/>
			</classpath>
		</java>
	  </timer>
	</target>

	<!-- ************************
	     * Start Test Suite     *
	     ************************ -->

	<target name="create_test_suite" depends="compile_test, build" >
		<echo>Creating test suite</echo>
		<description>Tests use the generated EBNF parser output</description>

		<java 
				classname="nl.axizo.EBNF.EBNFMain" 
				dir="${build}/test"
				fork="true"
				failonerror="true"
		>
			<!-- Enable following for profiling output -->
			<!-- jvmarg value="-javaagent:/home/wri/project/lib/jip/profile/profile.jar" / -->
			<!-- up-dir needed because we start in a subdir -->
			<arg value="${tests}/digits.ebnf"/>
			<classpath>
				<pathelement location="${build}/lib/parser.jar"/>
				<pathelement location="${build}/gen"/>
				<path refid="lib.path"/>
			</classpath>
		</java>
	</target>

	<!-- TODO: Following does not work yet because junit is
		not present on system -->
	<target name="test_suite" depends="create_test_suite" >
		<echo>Compiling test suite</echo>

		<!-- Compile the parsers used for testing -->
		<javac destdir="${build}/test"
			includeantruntime="false"
		>
			<src path="${build}/test"/>
			<classpath>
				<pathelement location="${build}/lib/parser.jar"/>
			</classpath>
		</javac>

		<echo>Compiling the testing classes</echo>
		<javac destdir="${build}/test"
			includeantruntime="false"
		>
			<src path="${src}"/>
			<include name="**/*Test.java" />
			<classpath>
				<pathelement location="${dist}/lib/parser.jar"/>
				<pathelement location="${build}/test"/>
				<path refid="lib.path"/>
			</classpath>
		</javac>

		<echo>Running test suite</echo>
		<junit printsummary="yes" fork="yes" haltonfailure="yes" showoutput="yes">
			<formatter type="plain"/>
			<test name="nl.axizo.test.ParserTest"/>
			<classpath>
				<pathelement location="${dist}/lib/parser.jar"/>
				<pathelement location="${build}/test"/>
			</classpath>
		</junit>
	</target>

	<target name="clean" >
	<delete includeemptydirs="true">
		<fileset dir="${build}">
			<include name="**/*" />
		</fileset>
	</delete>
	</target>
</project>

